apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: read-toolchain-properties-task
spec:
  params:
    - name: repository
      description: The git repository input for the pipeline
      default: "" # if empty will be inferred from the toolchain definition
    - name: continuous-delivery-context-secret
      description: name of the configmap containing the continuous delivery pipeline context secrets
      default: cd-secret
    - name: pipeline-debug
      description: Pipeline debug mode
      default: "0"
  results:
  - name: toolchain-region
    description: The region where the toolchain is located
  - name: toolchain-id
    description: The uuid for the toolchain definition
  - name: repository
    description: The code repo used as input for the pipeline
  - name: trigger-type
    description: Type of the trigger that caused this pipelinerun to occur
  - name: trigger-name
    description: Name of the trigger that caused this pipelinerun to occur
  - name: trigger-by
    description: Information on the operator that caused this pipelinerun to trigger
  - name: build-number
    description: A human readable pipeline build number (incrementing integer counter)
  - name: pipeline-id
    description: The uuid for the pipeline definition
  - name: pipeline-run-name
    description: The name of this pipeline run
  - name: pipeline-run-id
    description: The uuid of this pipeline run   
  workspaces:
    - name: artifacts
  steps:
    - name: read-toolchain-props
      image: ibmcom/pipeline-base-image
      workingDir: /artifacts
      env:
        - name: PIPELINE_RUN_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tekton.dev/pipelineRun']
        - name: PIPELINE_RUN_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/tekton-pipeline']
        - name: BUILD_NUMBER
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/build-number']
        - name: PIPELINE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/pipeline-id']
        - name: TRIGGER_TYPE
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/trigger-type']
        - name: TRIGGER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/trigger-name']
        - name: TRIGGERED_BY
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/triggered-by']
      command: ["/bin/bash", "-c"]
      args:
        - |
          set -e -o pipefail
          TOOLCHAIN_ID=$(jq -r '.toolchain_guid' /cd-config/toolchain.json)
          TOOLCHAIN_REGION=$(jq -r '.region_id' /cd-config/toolchain.json | awk -F: '{print $3}')
          REPO_TOOL_INT=$(jq -r '.services[] | select(.instance_id=="'"${PIPELINE_ID}"'") | .parameters.services[0]' /cd-config/toolchain.json)
          REPOSITORY_URL=$(jq -r '.services[] | select (.toolchain_binding.name=="'"${REPO_TOOL_INT}"'") | .parameters.repo_url' /cd-config/toolchain.json)
          echo "TOOLCHAIN_ID=${TOOLCHAIN_ID}" >> ./build.properties
          echo "TOOLCHAIN_REGION=${TOOLCHAIN_REGION}" >> ./build.properties
          echo "PIPELINE_RUN_NAME='${PIPELINE_RUN_NAME}'" >> ./build.properties
          echo "PIPELINE_RUN_ID=${PIPELINE_RUN_ID}" >> ./build.properties
          echo "BUILD_NUMBER=${BUILD_NUMBER}" >> ./build.properties
          echo "PIPELINE_ID=${PIPELINE_ID}" >> ./build.properties
          echo "REPOSITORY_URL=${REPOSITORY_URL}" >> ./build.properties
          echo "TRIGGER_TYPE='${TRIGGER_TYPE}'" >> ./build.properties
          echo "TRIGGER_NAME='${TRIGGER_NAME}'" >> ./build.properties
          echo "TRIGGERED_BY='${TRIGGERED_BY}'" >> ./build.properties
          echo "File 'build.properties' appended for passing env variables to subsequent pipeline jobs:"
          cat ./build.properties | grep -v -i password
          # Record task results
          echo -n "${TOOLCHAIN_REGION}" > $(results.toolchain-region.path)
          echo -n "${TOOLCHAIN_ID}" > $(results.toolchain-id.path)
          echo -n "${REPOSITORY_URL}" > $(results.repository.path)
          echo -n "${TRIGGER_TYPE}" > $(results.trigger-type.path)
          echo -n "${TRIGGER_NAME}" > $(results.trigger-name.path)
          echo -n "${TRIGGERED_BY}" > $(results.trigger-by.path)
          echo -n "${BUILD_NUMBER}" > $(results.build-number.path)
          echo -n "${PIPELINE_ID}" > $(results.pipeline-id.path)
          echo -n "${PIPELINE_RUN_NAME}" > $(results.pipeline-run-name.path)
          echo -n "${PIPELINE_RUN_ID}" > $(results.pipeline-run-id.path)
      volumeMounts:
        - mountPath: /cd-config
          name: cd-config-volume
  volumes:
    - name: cd-config-volume
      configMap:
        name: toolchain
        items:
          - key: toolchain.json
            path: toolchain.json