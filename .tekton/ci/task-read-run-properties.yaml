apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: read-run-properties-task
spec:
  inputs:
    params:
      - name: task-pvc
        description: the output pvc
  steps:
    - name: read-run-properties
      # tbd: use an image with curl and jq?
      image: ibmcom/pipeline-base-image
      env:
        - name: PIPELINE_RUN_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tekton.dev/pipelineRun']
        - name: PIPELINE_RUN_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/tekton-pipeline']
        - name: BUILD_NUMBER
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/build-number']
        - name: PIPELINE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/pipeline-id']
        - name: TRIGGER_TYPE
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/trigger-type']
        - name: TRIGGER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/trigger-name']
        - name: TRIGGERED_BY
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/triggered-by']
      command: ["/bin/bash", "-c"]
      args:
        - |
          set -e -o pipefail

          TOOLCHAIN_ID=$(jq -r '.toolchain_guid' /cd-config/toolchain.json)
          TOOLCHAIN_REGION=$(jq -r '.region_id' /cd-config/toolchain.json | awk -F: '{print $3}')
          
          echo "TOOLCHAIN_ID=${TOOLCHAIN_IDBUILD_NUMBER}" >> /artifacts/build.properties
          echo "TOOLCHAIN_REGION=${TOOLCHAIN_REGION}" >> /artifacts/build.properties
          echo "PIPELINE_RUN_NAME=${PIPELINE_RUN_NAME}" >> /artifacts/build.properties
          echo "PIPELINE_RUN_ID=${PIPELINE_RUN_ID}" >> /artifacts/build.properties
          echo "BUILD_NUMBER=${BUILD_NUMBER}" >> /artifacts/build.properties
          echo "PIPELINE_ID=${PIPELINE_ID}" >> /artifacts/build.properties
          echo "TRIGGER_TYPE=${TRIGGER_TYPE}" >> /artifacts/build.properties
          echo "TRIGGER_NAME=${TRIGGER_NAME}" >> /artifacts/build.properties
          echo "TRIGGERED_BY=${TRIGGERED_BY}" >> /artifacts/build.properties
      volumeMounts:
        - mountPath: /steps
          name: steps-volume
        - mountPath: /artifacts
          name: task-volume
        - mountPath: /cd-config
          name: cd-config-volume
  volumes:
    - name: steps-volume
      emptyDir: {}
    - name: task-volume
      persistentVolumeClaim:
        claimName: $(inputs.params.task-pvc)
    - name: cd-config-volume
      configMap:
        name: toolchain
        items:
          - key: toolchain.json
            path: toolchain.json